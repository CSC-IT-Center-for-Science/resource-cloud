apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{name}"
spec:
  selector:
    matchLabels:
      name: "{name}"
  template:
    metadata:
      labels:
        name: "{name}"
    spec:
      automountServiceAccountToken: false
      # tolerate user role node taint
      tolerations:
      - key: "role"
        value: "user"
        effect: "NoSchedule"
      initContainers:
      - name: autodownload
        image: "{image}"
        imagePullPolicy: IfNotPresent
        env: []
        command:
          - sh
          - -c
          - |
            if [ -z $AUTODOWNLOAD_URL ]; then exit 0; fi;
            cd /data;
            if [ $AUTODOWNLOAD_METHOD = "http-get" ]; then wget $AUTODOWNLOAD_URL || echo "download failed"; fi;
            if [ $AUTODOWNLOAD_METHOD = "git-clone" ]; then git clone $AUTODOWNLOAD_URL || echo "cloning failed"; fi;
        volumeMounts:
          - mountPath: "/data"
            name: data
      containers:
      - name: pebbles-instance
        image: "{image}"
        imagePullPolicy: IfNotPresent
        args: []
        env: []
        volumeMounts:
          - mountPath: "{volume_mount_path}"
            name: data
          - mountPath: "{volume_mount_path}/shared-data"
            name: shared-data
        # generic check if the pod is accepting connections, poll every 1 second
        readinessProbe:
          tcpSocket:
            port: {port}
            periodSeconds: 1
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "{pvc_name_user}"
            readOnly: false
        - name: shared-data
          persistentVolumeClaim:
            claimName: "{pvc_name_shared}"
            readOnly: {shared_data_read_only_mode}
